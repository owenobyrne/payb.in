<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
              http://www.springframework.org/schema/security/oauth http://www.springframework.org/schema/security/spring-security-oauth.xsd">

  <http use-expressions="true" entry-point-ref="loginFormEntryPoint">
    <intercept-url pattern="/v1/**" access="hasRole('USER')" />
    <intercept-url pattern="/oauth/confirm_access" access="hasRole('USER')" />
    <intercept-url pattern="/**" access="permitAll" />

    <custom-filter position="FORM_LOGIN_FILTER" ref="paybinAuthenticationFilter"/>
  </http>

  <beans:bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint" id="loginFormEntryPoint">
      <beans:property name="loginFormUrl" value="/login.jsp"/>
  </beans:bean>
  
  <beans:bean id="paybinAuthenticationFilter" class="in.payb.api.mvc.filter.PaybinAuthenticationFilter">
    <beans:constructor-arg name="filterProcessesUrl" type="java.lang.String" value="/login.do"/> <!-- this is the page that loginFormUrl above should post to. -->
    <beans:property name="authenticationManager" ref="authenticationManager"/>
  </beans:bean>
  
  <!-- erase-credentials defaults to true, which is fine if you can use the authentication objects on their
  own. I need to be able to retrieve the password each time, so I need it not to erase them after the
  call to authenticate();  -->
  <authentication-manager erase-credentials="false" alias="authenticationManager">
       <authentication-provider ref="paybinAuthenticationProvider"/>
  </authentication-manager>
 
  <oauth:provider consumer-details-service-ref="consumerDetails"
                  token-services-ref="tokenServices"
                  token-id-param="oauth_token" 
                  request-token-url="/oauth/request_token"
                  authenticate-token-url="/oauth/authorize"
                  access-token-url="/oauth/access_token"
                  require10a="true"/>

  <oauth:consumer-details-service id="consumerDetails">
    <oauth:consumer name="Tonr.com" key="tonr-consumer-key" secret="SHHHHH!!!!!!!!!!" resourceName="Your Photos"
                    resourceDescription="Your photos that you have uploaded to sparklr.com."/>
  </oauth:consumer-details-service>
  
  <oauth:token-services id="tokenServices"/>

</beans:beans>
	